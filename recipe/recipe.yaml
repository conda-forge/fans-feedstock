context:
  version: "0.4.2"

package:
  name: fans
  version: ${{ version }}

source:
  url: https://github.com/DataAnalyticsEngineering/FANS/archive/refs/tags/v${{ version }}.tar.gz
  sha256: 9F076F4F7A4DF7808A2532BAE1ED8CE3CEBBD18D8313095A1050A595C74F2B5A

build:
  number: 1
  skip:
    - win
  script:
    - if: unix
      then:
        - if: (build_platform != target_platform)
          then:
            # flags from https://conda-forge.org/docs/maintainer/knowledge_base/#cross-compilation and https://github.com/conda-forge/mumps-feedstock/blob/966474677d28486ef897b0d3bb2c10558dc9b5ca/recipe/build-mumps.sh
            - export OMPI_CC=$CC
            - export OMPI_CXX=$CXX
            - export OMPI_FC=$FC
            - export OPAL_PREFIX="$PREFIX"
            - export FFLAGS="${FFLAGS} -DAVOID_MPI_IN_PLACE"
            - export LDFLAGS="${LDFLAGS} -headerpad_max_install_names"
        - mkdir build
        - cd build
        - cmake .. $CMAKE_ARGS -DFANS_LIBRARY_FOR_MICRO_MANAGER=ON
        - cmake --build . -j
        - cmake --install .

requirements:
  build:
    - ${{ compiler('c') }}
    - ${{ compiler('cxx') }}
    - ${{ stdlib('c') }}
    - cmake
    - make
    - ninja
    - pybind11
    - if: (build_platform != target_platform)
      then:
        - openmpi-mpicxx
  host:
    - hdf5 * mpi_openmpi*
    - fftw * mpi_openmpi*
    - openmpi-mpicxx
    - eigen

tests:
  - package_contents:
      bin:
        - FANS
      lib:
        - FANS
  - script:
      # JSON test file has relative path to h5 included - changing that
      - JSON_FILE="$PREFIX/etc/conda/test-files/$PKG_NAME/0/test/input_files/test_LinearElastic.json"
      - MODIFIED_JSON_FILE="$PREFIX/etc/conda/test-files/$PKG_NAME/0/test/input_files/test_LinearElastic_mod.json"
      - NEW_MS_FILENAME="$PREFIX/etc/conda/test-files/$PKG_NAME/0/test/microstructures/sphere32.h5"
      # Use jq to create a modified copy of the JSON file
      - jq --arg new_filename "$NEW_MS_FILENAME" '.microstructure.filepath = $new_filename' "$JSON_FILE" > "$MODIFIED_JSON_FILE"
      # Run tests
      - mpiexec -n 1 FANS "$MODIFIED_JSON_FILE" "$PREFIX/etc/conda/test-files/$PKG_NAME/0//test/test_results.h5"
    requirements:
      run:
        - jq
    files:
      source:
        - test/
  - script:
      - FANS --version

about:
  homepage: https://github.com/DataAnalyticsEngineering/FANS
  summary: "FANS: an open-source, efficient, and parallel FFT-based homogenization solver designed to solve microscale multiphysics problems."
  description: |
    Fourier-Accelerated Nodal Solver (FANS) is an FFT-based homogenization solver for microscale multiphysics problems.
    FANS is written in C++, built using CMake, and it has MPI parallelization.
    The package exposes the binary FANS and the Python-bindings via libFANS.
  license: LGPL-3.0-only
  license_family: LGPL
  license_file: LICENSE

extra:
  recipe-maintainers:
    - sanathkeshav
    - claudiushaag
    - EMMAOpenSource
