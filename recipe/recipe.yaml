context:
  version: "0.3.0"

package:
  name: fans
  version: ${{ version }}

source:
  # url: https://github.com/DataAnalyticsEngineering/FANS/archive/refs/tags/v${{ version }}.tar.gz
  # sha256: 1573478d9acd27a9cfc126a4167ce3951ec26e9896bf19577b44cbc4bdc48b88
  # patches:
  #   - fix_gitignore_ms.patch  # modify so gitignore does not include the sphere32.h5 file
  git: https://github.com/DataAnalyticsEngineering/FANS.git
  branch: develop
  # git: https://github.com/claudiushaag/FANS.git
  # rev: 06de07f115210242b479c31f4ef3197469be9a27

build:
  number: 2
  skip:
    - win
  script:
    - if: unix
      then:
        - if: (build_platform != target_platform)
          then:
            # flags from https://conda-forge.org/docs/maintainer/knowledge_base/#cross-compilation and https://github.com/conda-forge/mumps-feedstock/blob/966474677d28486ef897b0d3bb2c10558dc9b5ca/recipe/build-mumps.sh
            - export OMPI_CC=$CC
            - export OMPI_CXX=$CXX
            - export OMPI_FC=$FC
            - export OPAL_PREFIX="$PREFIX"
            - export FFLAGS="${FFLAGS} -DAVOID_MPI_IN_PLACE"
            - export LDFLAGS="${LDFLAGS} -headerpad_max_install_names"
        - cmake $CMAKE_ARGS
        - cmake --build
        - cmake --install build

requirements:
  build:
    - ${{ compiler('c') }}
    - ${{ compiler('cxx') }}
    - ${{ stdlib('c') }}
    - cmake
    - make
    - ninja
    - if: (build_platform != target_platform)
      then:
        - openmpi-mpicxx
  host:
    - hdf5 * mpi_openmpi*
    - fftw * mpi_openmpi*
    - openmpi-mpicxx
    - eigen

tests:
  - package_contents:
      bin:
        - FANS
  - script:
      # JSON test file has relative path to h5 included - changing that
      - JSON_FILE="$PREFIX/etc/conda/test-files/$PKG_NAME/0/test/input_files/test_LinearElastic.json"
      - MODIFIED_JSON_FILE="$PREFIX/etc/conda/test-files/$PKG_NAME/0/test/input_files/test_LinearElastic_mod.json"
      - NEW_MS_FILENAME="$PREFIX/etc/conda/test-files/$PKG_NAME/0/test/microstructures/sphere32.h5"
      # Use jq to create a modified copy of the JSON file
      - jq --arg new_filename "$NEW_MS_FILENAME" '.microstructure.filepath = $new_filename' "$JSON_FILE" > "$MODIFIED_JSON_FILE"
      # Run tests
      - mpiexec -n 2 FANS "$MODIFIED_JSON_FILE" "$PREFIX/etc/conda/test-files/$PKG_NAME/0//test/test_results.h5"
    requirements:
      run:
        - jq
    files:
      source:
        - test/

about:
  homepage: https://github.com/DataAnalyticsEngineering/FANS
  summary: "FANS: an open-source, efficient, and parallel FFT-based homogenization solver designed to solve microscale multiphysics problems."
  description: |
    Fourier Accelerated Nodal Solvers (FANS) is an FFT-based homogenization solver designed to handle microscale multiphysics problems.
    This repository contains a C++ implementation of FANS, built using CMake and MPI for parallel computations.
  license: LGPL-3.0-only
  license_family: LGPL
  license_file: LICENSE

extra:
  recipe-maintainers:
    - sanathkeshav
    - claudiushaag
    - EMMAOpenSource
